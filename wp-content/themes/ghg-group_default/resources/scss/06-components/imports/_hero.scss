@use "../../01-settings/colors" as color;
@use "../../01-settings/measurements" as measurement;
@use "../../02-tools/container" as container;
@use "../../02-tools/spacing" as spacing;
@use "../../02-tools/articles" as article;
@use "../../02-tools/breakpoints" as breakpoint;
@use "../../02-tools/buttons" as button;
@use "../../02-tools/typography" as typography;
@use "../../02-tools/positioning" as position;
@use "../../02-tools/content" as content;
@use "../../02-tools/grid" as grid;
@use "../../02-tools/images-and-icons" as images;

@mixin common-layout-properties {
	@include spacing.block-spacing-padding;
	min-height: 0;

	.hero {
		&__image {
			position: relative;
		}

		&__inner {
			padding: 0;
			display: flex;
			align-items: center;
		}

		&__inline__inner {
			@include container.standard-settings(true);
			@include grid.standard-settings;
			grid-template-columns: repeat(1, minmax(0, 1fr));
			@include breakpoint.large-screen-min {
				grid-template-columns: repeat(2, minmax(0, 1fr));
				gap: measurement.$universal-space-3;
			}
		}

		&__article {
			@include breakpoint.large-screen-min {
				padding-top: 0;
			}
		}

		&__image-wrap {
			position: relative;
			@include images.aspect-ratio-16-9;
			@include breakpoint.large-screen-min {
				min-height: 50vh;
			}
		}

		&__image {
			clip-path: polygon(100% 0, 100% 75%, 75% 100%, 0 100%, 0 0);
		}

		&__ticker {
			display: none !important;
		}

	}
	&:after {
		display: none !important;
	}
}


main > .hero:first-child {
	margin-top: 0;
	padding: measurement.$universal-space-3 0;
	@include breakpoint.large-screen-min {
		padding: measurement.$universal-space-3 0 measurement.$universal-space-7 0;
	}

	&:after {
		@include position.full-size-after;
		z-index: 2;
		background: linear-gradient(180deg, color.$c-pearl 5%, rgba(40, 55, 65, 0) 50%, rgba(40, 55, 65, 0) 100%);
	}
}


.hero {
	@include spacing.section-spacing;
	@include position.flex-center;
	@include content.display-settings;
	position: relative;
	min-height: 100vh;
	color: color.$c-white;
	overflow: hidden;

	@include breakpoint.large-screen-min {
		min-height: 90vh;
	}

	&__inner {
		@include container.standard-settings(true);
	}


	&__image {
		@include position.full-size-after;
		object-fit: cover;
		position: absolute;

		&:first-of-type {
			@include breakpoint.medium-screen-min {
				display: none;
			}
		}

		&:last-of-type {
			display: none;
			min-height: auto;
			@include breakpoint.medium-screen-min {
				display: unset;
			}
		}
	}

	&__ticker {
		position: absolute;
		display: flex;
		align-items: center;
		bottom: 0;
		left: 0;
		right: 0;
		z-index: 1;
		background: color.$c-pearl;

		width: 100%;
		padding: measurement.$universal-space-2 0;
		overflow: hidden;


		&__inner {
			display: flex;
			position: absolute;
			animation-iteration-count: infinite;
			animation-timing-function: linear;
			animation-name: ticker;
			animation-duration: 30s;
			white-space: nowrap;
			align-items: center;
			gap: measurement.$universal-space-2;
			padding-left: 100%;
		}

		&__item {
			display: flex;
			flex-wrap: wrap;
			gap: measurement.$universal-space-2;

			&--line {
				display: block;
				height: 1px;
				width: measurement.$universal-space-3;
				background: color.$c-gold;

				&:last-of-type {
					display: none;
				}
			}
		}

		p {
			@include typography.font-large;
			color: color.$c-gold;
			margin: 0;
		}
	}

	&--super-size-text {
		h1 {
			@include typography.super-size;
		}
	}

	&--layout-diagonal-cutoff {
		padding: measurement.$universal-space-3 0;
		color: color.$c-pearl;
		min-height: auto;
		@include breakpoint.large-screen-min {
			min-height: 70vh;
			padding: 0;
		}

		&:after {
			@include position.full-size-after;
			background-color: color.$c-steal;
			@include breakpoint.large-screen-min {
				clip-path: polygon(0 0, 100% 0%, 40% 100%, 0% 100%);
			}
		}

		.hero {
			&__image {
				@include breakpoint.large-screen-min {
					width: 60%;
					left: auto;
				}
			}
		}


	}

	&__inline__inner {
		width: 100%;
	}


	&--layout-inline-image-left {
		@include common-layout-properties;
		background: color.$c-pearl;

		.hero {
			&__button {
				@include button.default-settings(color.$c-gold, color.$c-pearl);
			}
		}
	}

	&--layout-inline-image-right {
		@include common-layout-properties;
		background: color.$c-steal;
		color: color.$c-pearl;

		.hero {
			&__inner {
				order: 1;
			}

			&__image-wrap {
				order: 2;
			}

			&__image-cut {
				fill: color.$c-steal;
			}
		}
	}
}

@-webkit-keyframes ticker {
	0% {
		-webkit-transform: translate3d(0, 0, 0);
		transform: translate3d(0, 0, 0);
		visibility: visible;
	}
	100% {
		-webkit-transform: translate3d(-100%, 0, 0);
		transform: translate3d(-100%, 0, 0);
	}
}

@keyframes ticker {
	0% {
		-webkit-transform: translate3d(0, 0, 0);
		transform: translate3d(0, 0, 0);
		visibility: visible;
	}
	100% {
		-webkit-transform: translate3d(-100%, 0, 0);
		transform: translate3d(-100%, 0, 0);
	}
}
