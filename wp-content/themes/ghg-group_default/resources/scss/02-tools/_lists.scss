@use "../01-settings/abstracts" as abstract;
@use "../01-settings/measurements" as measurement;
@use "./spacing" as spacing;

@mixin reset {
	padding: 0;
	margin: 0;
	list-style: none;
	li {
		padding: 0;
		margin: 0;
	}
	a {
		color: inherit;
		text-decoration: underline;

		&:hover {
			color: var(--active);
		}
	}
}


$tick-icon: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'><g id='Complete'><g id='tick'><polyline points='3.7 14.3 9.6 19 20.3 5' fill='none' stroke='%23E8AF5F' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'/></g></g></svg>");

@mixin styles {
	ul {
		list-style: none;
	}
	ol {
		list-style: none;
	}
	ul,
	ol {

		li {
			@include spacing.list-spacing;
			display: flex;
			align-items: flex-start;
			padding-left: measurement.$universal-space-3;
			position: relative;

			&::before {
				content: $tick-icon; // Insert the tick icon using content property
				width: measurement.$universal-space-2;
				height: measurement.$universal-space-2;
				display: inline-block;
				margin-right: measurement.$universal-space;
				position: absolute;
				left: 0;
			}
		}
	}
}


